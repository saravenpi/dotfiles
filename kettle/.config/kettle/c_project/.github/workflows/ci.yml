name: kitty coding style checker 📺

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
jobs:
  haskell:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - name: check for haskell files
        id: check_hs
        run: |
          if [ -n "$(find . -name '*.hs' -print -quit)" ]; then
            echo "state_haskell=0" >> $github_env
            echo "haskell files found, running job"
          else
            echo "state_haskell=1" >> $github_env
            echo "no haskell files found, skipping job"
            exit 1
          fi

      - name: make binary executable
        if: env.state_haskell == '0'
        run: chmod +x ./tests/lambdananas

      - name: run coding style check
        if: env.state_haskell == '0'
        id: check
        run: |
          output=$(./tests/lambdananas *.hs)
          echo "$output"
          echo "output=$output" >> $github_env
          if [ -n "$output" ]; then
            echo "coding style check failed"
            exit 1
          fi

      - name: notify on failure
        if: failure() && env.state_haskell == '0'
        run: |
          curl ntfy.sh \
            -d '{
              "topic": "saravenpi_github_actions",
              "title": "📺 ${{ github.event.repository.name }} [haskell]",
              "icon" : "https://i.ibb.co/ncrtcxc/poopy.png",
              "message": "[${{ github.event.head_commit.message }}], ne passe pas le coding style 🚨\n\n 🚧 erreurs :\n\n ${{ env.output }}",
              "actions": [{ "action": "view", "label": "voir sur github 🌍", "url": "${{ github.event.repository.html_url }}/actions/workflows/checker.yml" }]
            }'

  c:
    runs-on: ubuntu-latest
    container: ghcr.io/epitech/coding-style-checker:latest
    needs: haskell
    if: failure()
    steps:
      - uses: actions/checkout@v2

      - name: check for c files
        id: check_c
        run: |
          if [ -n "$(find . -name '*.c' -print -quit)" ]; then
            echo "state_c=0" >> $github_env
            echo "c files found, running job"
          else
            echo "state_c=1" >> $github_env
            echo "no c files found, skipping job"
            exit 1
          fi

      - name: check coding style
        if: env.state_c == '0'
        id: check
        run: |
          check.sh $(pwd) $(pwd)
          output=$(cat $(pwd)/coding-style-reports.log)
          echo "$output"
          echo "output=$output" >> $github_env
          if [ -n "$output" ]; then
            echo "coding style check failed"
            exit 1
          fi

      - name: notify on failure
        if: failure() && env.state_c == '0'
        run: |
          curl ntfy.sh \
            -d '{
              "topic": "saravenpi_github_actions",
              "title": "📺 ${{ github.event.repository.name }} [c]",
              "icon" : "https://i.ibb.co/ncrtcxc/poopy.png",
              "message": "[${{ github.event.head_commit.message }}], ne passe pas le coding style 🚨\n\n 🚧 erreurs :\n\n ${{ env.output }}",
              "actions": [{ "action": "view", "label": "voir sur github 🌍", "url": "${{ github.event.repository.html_url }}/actions/workflows/checker.yml" }]
            }'
