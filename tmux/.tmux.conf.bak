# Mellow theme colors
set -g @mellow_purple "#aca1cf"      # Purple for active window
set -g @mellow_green "#90b99f"       # Green for session indicator
set -g @mellow_gray "#353539"        # Gray for inactive elements
set -g @mellow_background "#161617"  # Background color
set -g @mellow_foreground "#c9c7cd"  # Foreground color
set -g @left_border ""
set -g @right_border ""
set -g @session_icon ""
set -g @active_window_icon ""
set -g @inactive_window_icon ""

# set -g window-status-separator ""
set -g window-status-separator " "

# change prefix
set -g prefix C-a
bind a send-prefix

set-option -g status-position top
set -g default-terminal "tmux-256color"
set -g mouse on
set -g default-shell /bin/zsh
set -g allow-passthrough on

# vim-like keybindings in copy mode
set-window-option -g mode-keys vi
bind-key -T copy-mode-vi v send-keys -X begin-selection
bind-key -T copy-mode-vi y send-keys -X copy-selection-and-cancel
bind-key -T copy-mode-vi _ send-keys -X start-of-line
bind-key -T copy-mode-vi C-v send-keys -X rectangle-toggle

# better split management
# bind v split-window -h
# bind s split-window -v

# rename windows and sessions with floating popup
bind r display-popup -x C -y C -w 40 -h 3 -E "~/mybins/tmux-rename-window.sh"
bind , display-popup -x C -y C -w 40 -h 3 -E "~/mybins/tmux-rename-window.sh"
bind R display-popup -x C -y C -w 40 -h 3 -E "~/mybins/tmux-rename-session.sh"

# Session management
bind S list-sessions
bind C command-prompt -p "New session name:" \
  "new-session -s %1"

bind o run-shell "~/mybins/tmux-session-switcher.sh"

# Kill pane with confirmation
bind x display-popup -x C -y C -w 30 -h 5 -E "~/mybins/tmux-confirm-kill-pane.sh"

# Close and kill the whole session with confirmation
bind q display-popup -x C -y C -w 30 -h 5 -E "~/mybins/tmux-confirm-kill-session.sh"

# reload tmux config
bind T source-file ~/.tmux.conf \; display "Config reloaded"

# moving between panes with vim movement keys
bind h select-pane -L
bind j select-pane -D
bind k select-pane -U
bind l select-pane -R

# resize the pane
bind-key -r J resize-pane -D 3
bind-key -r K resize-pane -U 3
bind-key -r H resize-pane -L 3
bind-key -r L resize-pane -R 3

# moving between windows with vim movement keys with fzf support
is_vim="ps -o state= -o comm= -t '#{pane_tty}' \
| grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|n?vim?x?)(diff)?$'"

is_fzf="ps -o state= -o comm= -t '#{pane_tty}' \
  | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?fzf$'"

bind -n C-h run "($is_vim && tmux send-keys C-h) || \
                          tmux select-pane -L"
bind -n C-j run "($is_vim && tmux send-keys C-j)  || \
                         ($is_fzf && tmux send-keys C-j) || \
                         tmux select-pane -D"
bind -n C-k run "($is_vim && tmux send-keys C-k) || \
                          ($is_fzf && tmux send-keys C-k)  || \
                          tmux select-pane -U"
bind -n C-l run "($is_vim && tmux send-keys C-l) || \
                          tmux select-pane -R"
bind-key -n C-\\ if-shell "$is_vim" "send-keys C-\\" "select-pane -l"

# tpm plugins
set -g @plugin 'tmux-plugins/tpm'
set -g @plugin 'kristijanhusak/tmux-simple-git-status'
set -g @plugin 'tmux-plugins/tmux-yank'
set -g @plugin 'tmux-plugins/tmux-sensible'
set -g @plugin 'tmux-plugins/tmux-pain-control'
set -g @plugin 'tmux-plugins/tmux-logging'
set -g @plugin 'tmux-plugins/tmux-resurrect'
set -g @plugin 'tmux-plugins/tmux-continuum'
# Removed: set -g @plugin 'olimorris/tmux-pomodoro-plus' - using wisp instead


# Make the status line pretty and add some modules
set -g status-right-length 100
set -g status-left-length 100

# Window tab styling - active tab uses mellow purple, inactive uses mellow gray
set -g window-status-current-style "fg=#{@mellow_background},bg=#{@mellow_purple}"
set -g window-status-style "fg=#{@mellow_gray},bg=default"

# Window status format with proper powerline symbols and no extra spaces
set -g window-status-format "#[fg=#{@mellow_gray},bg=default]#{@left_border}#[fg=white,bg=#{@mellow_gray}] #{@inactive_window_icon} #W #[fg=#{@mellow_gray},bg=default]#{@right_border}"
set -g window-status-current-format "#[fg=#{@mellow_purple},bg=#{@mellow_background}]#{@left_border}#[fg=#{@mellow_background},bg=#{@mellow_purple}] #{@active_window_icon} #W #[fg=#{@mellow_purple},bg=#{@mellow_background}]#{@right_border}"

# Status left with consistent color usage
set -g status-left "#[bg=#{@mellow_green},fg=#{@mellow_background}]  #{@session_icon} #S #[fg=#{@mellow_green},bg=default]#{@right_border} "

# Transparent Status bar background
set -g status-bg default
set -g status-style "bg=default,fg=#{@mellow_foreground}"
set -g status-right "#[fg=#{@mellow_purple},bg=default]#{@left_border}#[bg=#{@mellow_purple},fg=#{@mellow_background}] #(~/mybins/wisp-tmux.sh) "

# Pomodoro
set -g @pomodoro_toggle 'm'                    # Start/pause a Pomodoro/break
set -g @pomodoro_cancel 'M'                    # Cancel the current session
set -g @pomodoro_skip '_'                      # Skip a Pomodoro/break

set -g @pomodoro_mins 25                       # The duration of the Pomodoro
set -g @pomodoro_break_mins 5                  # The duration of the break after the Pomodoro completes
set -g @pomodoro_intervals 4                   # The number of intervals before a longer break is started
set -g @pomodoro_long_break_mins 25            # The duration of the long break
set -g @pomodoro_repeat 'off'                  # Automatically repeat the Pomodoros?
set -g @pomodoro_disable_breaks 'off'          # Turn off breaks

set -g @pomodoro_on "  "                      # The formatted output when the Pomodoro is running
set -g @pomodoro_complete " ✔︎ "                 # The formatted output when the break is running
set -g @pomodoro_pause " ⏸︎ "                    # The formatted output when the Pomodoro/break is paused
set -g @pomodoro_prompt_break " ⏲︎ break?"      # The formatted output when waiting to start a break
set -g @pomodoro_prompt_pomodoro " ⏱︎ start?"   # The formatted output when waiting to start a Pomodoro

set -g @pomodoro_menu_position "R"             # The location of the menu relative to the screen
set -g @pomodoro_sound 'on'                    # Sound for desktop notifications (Run `ls /System/Library/Sounds` for a list of sounds to use on Mac)
                                               # (On Linux add `on` to use the `beep` program or add your custom beeping command)

set -g @pomodoro_notifications 'on'           # Enable desktop notifications from your terminal
set -g @pomodoro_granularity 'on'
set -g status-interval 1                       # Refresh the status line every second
set -g @pomodoro_interval_display "[%s/%s]"

run '~/.tmux/plugins/tpm/tpm'
